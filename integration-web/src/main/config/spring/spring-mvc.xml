<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			classpath:/org/springframework/beans/factory/xml/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- 注解配置 -->
	<context:component-scan base-package="org.platform.modules.*.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<mvc:annotation-driven />
	
	<!-- 拦截器设置 -->
    <mvc:interceptors>
    	<bean class="org.platform.modules.front.interceptor.CommonDataInterceptor">
            <property name="excludeUrlPatterns">
                <value>
                    /admin/polling
                </value>
            </property>
        </bean>
    </mvc:interceptors>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="frontContextInterceptor"/>
				<ref bean="frontLocaleInterceptor"/>
			</list>
		</property>
	</bean>
	<bean id="frontContextInterceptor" class="org.platform.modules.front.interceptor.FrontContextInterceptor"/>
	<bean id="frontLocaleInterceptor" class="org.platform.modules.front.interceptor.FrontLocaleInterceptor"/>
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="clientlanguage"/>
		<property name="cookieMaxAge" value="-1"/>
	</bean>
    
<!--     <mvc:message-converters register-defaults="true"> -->
<!--         StringHttpMessageConverter编码为UTF-8，防止乱码 -->
<!--         <bean class="org.springframework.http.converter.StringHttpMessageConverter"> -->
<!--             <constructor-arg value="UTF-8"/> -->
<!--             <property name = "supportedMediaTypes"> -->
<!--                 <list> -->
<!--                     <bean class="org.springframework.http.MediaType"> -->
<!--                         <constructor-arg index="0" value="text"/> -->
<!--                         <constructor-arg index="1" value="plain"/> -->
<!--                         <constructor-arg index="2" value="UTF-8"/> -->
<!--                     </bean> -->
<!--                     <bean class="org.springframework.http.MediaType"> -->
<!--                         <constructor-arg index="0" value="*"/> -->
<!--                         <constructor-arg index="1" value="*"/> -->
<!--                         <constructor-arg index="2" value="UTF-8"/> -->
<!--                     </bean> -->
<!--                 </list> -->
<!--             </property> -->
<!--         </bean> -->
<!--         避免IE执行AJAX时,返回JSON出现下载文件 -->
<!--         <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"> -->
<!--             <property name="supportedMediaTypes"> -->
<!--                 <list> -->
<!--                     <value>application/json;charset=UTF-8</value> -->
<!--                 </list> -->
<!--             </property> -->
<!--             <property name="serializerFeature"> -->
<!--             这个地方加上这个功能吧，能自己配置一些东西，比如时间的格式化，null输出""等等 -->
<!--             </property> -->
<!--         </bean> -->
<!--     </mvc:message-converters> -->

	<!--To enable @RequestMapping process on type level and method level-->
<!-- 	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" /> -->
<!-- 	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" /> -->
	

	<!--Use JAXB OXM marshaller to marshall/unmarshall following class-->
<!-- 	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> -->
<!-- 		<property name="classesToBeBound"> -->
<!-- 			<list> -->
<!-- 				<value>platform.entity.User</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="users" class="org.springframework.web.servlet.view.xml.MarshallingView"> -->
<!-- 		<constructor-arg ref="jaxbMarshaller" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" /> -->

	<!-- 内容协商管理器  -->
    <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
<!--     <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> -->
<!--         扩展名至mimeType的映射,即 /user.json => application/json -->
<!--         <property name="favorPathExtension" value="true"/> -->
<!--         用于开启 /userinfo/123?format=json 的支持 -->
<!--         <property name="favorParameter" value="true"/> -->
<!--         <property name="parameterName" value="format"/> -->
<!--         是否忽略Accept Header -->
<!--         <property name="ignoreAcceptHeader" value="false"/> -->
		<!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  --> 
<!--         <property name="mediaTypes">  -->
<!--             <value> -->
<!--                 json=application/json -->
<!--                 xml=application/xml -->
<!--                 html=text/html -->
<!--             </value> -->
<!--         </property> -->
<!--         默认的content type -->
<!--         <property name="defaultContentType" value="text/html"/> -->
<!--     </bean> -->

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 针对Velocity的配置 -->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/static/vm" />
	</bean>
	
	<bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
	    <property name="cache" value="false" />
	    <property name="suffix" value=".vm" />
	    <property name="exposeSpringMacroHelpers" value="true" />
    </bean>

	<!-- 针对FreeMarker的配置 -->
    <bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/static/ftl" />
        <property name="defaultEncoding" value="UTF-8" /> 
        <property name="freemarkerSettings"> 
        	<props> 
	        	<prop key="template_update_delay">10</prop> 
	            <prop key="locale">zh_CN</prop> 
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop> 
                <prop key="number_format">#.##</prop> 
            </props> 
        </property> 
    </bean>  

	<bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />      
		<property name="prefix" value="/WEB-INF/static/ftl" />
	    <property name="suffix" value=".ftl" />      
		<property name="contentType" value="text/html;charset=UTF-8"/>
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />  
	    <property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
    </bean>

	<!--定义Jsp配置-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!--定义Spring的Multipart解析器-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="GBK" />
		<property name="maxUploadSize" value="104857600"/>
	</bean>

	<!-- Mapping exception to the handler view -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="/WEB-INF/views/commons/error" />
		<property name="exceptionMappings">
			<props>
			</props>
		</property>
	</bean>
	
	<!-- 国际化资源 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basenames">  
            <list>  
                <value>classpath:locale/messages</value>  
                <value>classpath:locale/exception</value>  
            </list>  
        </property>  
        <property name="defaultEncoding" value="UTF-8"/>  
        <property name="cacheSeconds" value="60"/>  
    </bean>  
	
	<!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<!-- <mvc:default-servlet-handler/> -->
	
	<!-- 静态资源映射 -->  
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
	<mvc:resources mapping="/images/**" location="/WEB-INF/static/images/" />  
	<mvc:resources mapping="/css/**" location="/WEB-INF/static/css/" />  
	<mvc:resources mapping="/js/**" location="/WEB-INF/static/js/" />  
	
	<import resource="spring-mvc-shiro.xml"/>
	
</beans>